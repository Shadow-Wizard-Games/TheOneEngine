{
  "fragment": "//------------------------\n// Smol CRT Shader ~hekbas\n//------------------------\n\n#version 450 core\nprecision highp float;\n\nuniform sampler2D albedo;\nuniform vec2 warp;\nuniform float time;\n\nin vec2 fragCoord;\nlayout(location = 1) out vec4 fragColor;\n\nvec2 kWarp = vec2(1.0 / warp.x, 1.0 / warp.y);\n\nvec2 WarpUV(vec2 uv)\n{\n\tuv = uv * 2.0 - 1.0;\n\tuv *= vec2(\n\t\t1.0 + (uv.y * uv.y) * kWarp.x,\n\t\t1.0 + (uv.x * uv.x) * kWarp.y\n\t);\n\treturn uv * 0.5 + 0.5;\n}\n\nvoid DrawVignette(inout vec3 color, vec2 uv)\n{\n    float vignette = uv.x * uv.y * (1.0 - uv.x) * (1.0 - uv.y);\n    vignette = clamp(pow(16.0 * vignette, 0.3), 0.0, 1.0);\n    color *= vignette;\n}\n\nvoid DrawScanLine(inout vec3 color, vec2 uv)\n{\n    float scanline = clamp(0.95 + 0.05 * cos(3.14 * (uv.y + 0.008 * time) * 240.0 * 1.0), 0.0, 1.0);\n    float grille = 0.85 + 0.15 * clamp(1.5 * cos(3.14 * uv.x * 640.0 * 1.0), 0.0, 1.0);\n    color *= scanline * grille * 1.2;\n}\n\nvoid main()\n{\n    vec2 uv = fragCoord.xy;\n    vec2 crtUV = WarpUV(uv);\n\n    vec3 color = texture(albedo, crtUV).rgb;\n\n    if(crtUV.x < 0.0 || crtUV.x > 1.0 || crtUV.y < 0.0 || crtUV.y > 1.0)\n    {\n        color = vec3(0.0, 0.0, 0.0);\n    }\n\n    DrawVignette(color, crtUV);\n\n    DrawScanLine(color, crtUV);\n\n    fragColor.xyz = color;\n    fragColor.w = 1.0;\n}",
  "uniforms": [
    {
      "Name": "albedo",
      "Type": 10
    },
    {
      "Name": "warp",
      "Type": 4
    },
    {
      "Name": "time",
      "Type": 3
    }
  ],
  "vertex": "//------------------------\n// Smol CRT Shader ~hekbas\n//------------------------\n\n#version 450 core\n\nlayout(location = 0) in vec3 aPos;\nlayout(location = 1) in vec2 aTexCoords;\n\nout vec2 fragCoord;\n\nvoid main()\n{\n    fragCoord = aTexCoords;\n    gl_Position = vec4(aPos, 1.0);\n}"
}